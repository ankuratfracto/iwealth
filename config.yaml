version: 1
project: iwealth

api:
  endpoint: "https://prod-ml.fracto.tech/upload-file-smart-ocr"
  api_key_env: "FRACTO_API_KEY"     # read the key from env at runtime
  api_key: "IWE-BHA-84AD66-MLMPC2-7XU5Z196"  # fallback if env var not set
  timeout_seconds: 300              # per-request timeout
  # Optional: include qr_range form field in OCR requests
  # When enabled, a form field qr_range: "<value>" is sent along with the PDF
  # Example value "0" mirrors curl: --form 'qr_range="0"'

  # qr_range:
  #   enable: disable
  #   value: "0"


concurrency:
  chunk_size_pages: 1
  max_parallel: 9
  min_tail_combine: 1

passes:
  first:
    parser_app: "jIsqGEQwxdqZR35R" #"jIsqGEQwxdqZR35R"     # default first-pass parser
    model: "tv6"
    extra_accuracy: false
    selection:
      use_has_table: true
      has_table_field: "has_table"     # field under parsedData (legacy; kept for fallback)
      neighbor_radius: 0               # 0 keeps strictly table pages
      # New: config‑driven selection rules; if present, replaces the legacy has_table picker
      criteria:
        combine: any                   # any | all
        rules:
          - { alias: "first_pass.has_table", op: "truthy" }
          # Examples you can toggle/extend:
          # - { path: "parsedData.Document_type", op: "neq", value: "Others" }
          # - { path: "parsedData.Has_multiple_sections", op: "truthy" }
      fallbacks:
        - classification_non_others    # fallback 1: Non-"Others" pages
        - all_pages                    # fallback 2: include everything
  second:
    parser_app: "pDJoI1nbLM6TvD5u"     # second-pass (selected.pdf) classifier
    model: "gv1"
    extra_accuracy: true
    save_selected_json: true
    selected_json_name: "{stem}_selected_ocr.json"
    selected_pdf_name:  "{stem}_selected.pdf"
    combine_pages: true
  filter:
    enable: true                  # turn off to skip quick pruning
    parser_app: "pDJoI1nbLM6TvD5u"   # reuse the classifier; set your nano/light parserApp if different
    model: "tv6"                 # set the tiny model you have (fallbacks to your config if unavailable)
    extra_accuracy: false
    min_pages_to_run: 6           # only run this filter if ≥ N pages are selected
    keep_if_has_two: true         # always keep mixed pages
    drop_others: true             # drop pages whose doc_type normalises to 'Others'
    keep_doc_types:               # doc types to keep (normalised to canonical labels)
      - Consolidated Balance Sheet
      - Standalone Balance Sheet
      - Consolidated Profit and Loss Statement
      - Standalone Profit and Loss Statement
      - Consolidated Cashflow
      - Standalone Cashflow
  third:
    defaults:
      parser_app: "qbE1jBS40EtBRvvx"   # default if routing has no match (generic corporate BS parser)
      model: "tv6"
      extra_accuracy: false
    # Retry plan if a group's validation fails
    on_validation_failure:
      retries:
        - { extra_accuracy: true }     # re-run with extra accuracy
        - { alternate_parser: true }   # try next parser in routing for that (company_type, doc_type)
        - { fallback_company_type: "corporate" }  # last-resort generic
    combine_pages: true

labels:
  canonical:                           # exactly these 7 labels
    - Consolidated Balance Sheet
    - Standalone Balance Sheet
    - Consolidated Profit and Loss Statement
    - Standalone Profit and Loss Statement
    - Consolidated Cashflow
    - Standalone Cashflow
    - Others
  normalization:                       # regex → canonical (case-insensitive)
    - { pattern: "^consolidated.*balance.*", label: "Consolidated Balance Sheet" }
    - { pattern: "^standalone.*balance.*",  label: "Standalone Balance Sheet" }
    - { pattern: "statement of assets and liabilities", label: "Standalone Balance Sheet" }
    - { pattern: "^consolidated.*(profit).*(loss)", label: "Consolidated Profit and Loss Statement" }
    - { pattern: "^standalone.*(profit).*(loss)",   label: "Standalone Profit and Loss Statement" }
    - { pattern: "(statement of profit).*(loss)",   label: "Standalone Profit and Loss Statement" }
    - { pattern: "^consolidated.*cash.*flow", label: "Consolidated Cashflow" }
    - { pattern: "^standalone.*cash.*flow",  label: "Standalone Cashflow" }
    - { pattern: "cash\\s*flow",             label: "Standalone Cashflow" }
  regex_flags: "i"                     # case-insensitive

classification:
  # Use these anchors on normalized, whitespace-collapsed text
  anchors:
    balance_sheet:
      generic:
        - "statement of assets and liabilities"
        - "balance sheet"
        - "equity and liabilities"
        - "capital and liabilities"
        - "\\bassets\\b"
      bank_specific:
        - "\\bcapital\\b"
        - "reserves and surplus"
        - "\\bdeposits\\b"
        - "\\bborrowings\\b"
        - "other liabilities and provisions"
        - "cash (and )?balances? with rbi"
        - "balances with banks.*money at call and short notice"
        - "\\binvestments\\b"
        - "\\badvances\\b"
      end_checks:
        - "total equity and liabilities"
        - "total assets"
    profit_and_loss:
      generic:
        - "statement of profit and loss"
        - "profit and loss statement"
        - "revenue from operations"
        - "other income"
        - "total income \\(i\\+ii\\)"
        - "profit before tax"
        - "earnings per share"
      bank_specific:
        - "interest earned"
        - "interest expended"
        - "operating expenses"
        - "provisions \\(other than tax\\) and contingencies"
    cashflow:
      generic:
        - "cash flow from operating activities"
        - "cash flow from investing activities"
        - "cash flow from financing activities"
      end_checks:
        - "net increase/\\(decrease\\) in cash and cash equivalents"
        - "cash and cash equivalents at the end"
  negatives:                           # if these dominate → label as Others
    press_results:
      - "audited financial results"
      - "unaudited financial results"
      - "results for the quarter|year ended"
    segment_reporting:
      - "segment reporting"
    ratios_disclosures:
      - "\\bratio\\b"
      - "capital adequacy"
      - "provision coverage ratio"
      - "\\bnpa\\b"
      - "basel"
      - "pillar\\s?-?iii"
    regulatory_notes:
      - "rbi circular"
      - "\\bsebi\\b"
      - "irdai"
      - "note \\d+"
  continuation_cues:
    balance_sheet:
      - "trade receivables"
      - "other financial liabilities"
      - "property, plant and equipment"
      - "\\binvestments\\b"
    profit_and_loss:
      - "other income"
      - "\\bexpenses\\b"
      - "finance costs"
      - "earnings per share"
    cashflow:
      - "adjustments for"
      - "investing activities"
      - "financing activities"
      - "cash and cash equivalents at the end"
  mixed_page:
    enable: true
    min_primary_height_ratio: 0.55      # primary must occupy ≥ 55% height
    default_split_hint: 0.58
    # treat tiny cross-references as noise; don't mark has_two
    min_secondary_height_ratio: 0.25

company_type_prior:                     # soft prior; never a hard gate
  types: [bank, nbfc, insurance, corporate]
  default: "corporate"
  patterns:
    bank:
      - "banking regulation act"
      - "\\bcrar\\b|basel"
      - "\\bnpa\\b|priority sector"
      - "cash and balances with rbi"
    nbfc:
      - "\\bnbfc\\b"
      - "expected credit loss|ecl|stage\\s?[1-3]"
      - "ind\\s?as\\s?109"
    insurance:
      - "irdai"
      - "policyholders'? fund"
      - "claims incurred"
      - "gross written premium"

routing:                                # per (company_type × doc_type)
  # doc_type keys must be lower-case canonical labels
  # When true, a disabled parser (enable: true) will cause that doc type to be skipped
  # instead of falling back to a different parser.
  skip_on_disabled: true
  non financial company:
    consolidated balance sheet:             { parser: "qbE1jBS40EtBRvvx", model: "tv6", extra: true, enable: true }
    # done
    standalone balance sheet:               { parser: "qbE1jBS40EtBRvvx", model: "tv6", extra: true, enable: true }
    # done
    consolidated profit and loss statement: { parser: "1hh51mG0tc3z4hYC", model: "tv6", extra: true, enable: true } # 1hh51mG0tc3z4hYC
    # done
    standalone profit and loss statement:   { parser: "1hh51mG0tc3z4hYC", model: "tv6", extra: true, enable: true }
    # done
    consolidated cashflow:                  { parser: "9JcrGiEcJqtUvUB5", model: "tv6", extra: true, enable: false }
    # done
    standalone cashflow:                    { parser: "9JcrGiEcJqtUvUB5", model: "tv6", extra: true, enable: false }
    # done
  corporate:
    consolidated balance sheet:             { parser: "qbE1jBS40EtBRvvx", model: "tv6", extra: true, enable: true }
    # done
    standalone balance sheet:               { parser: "qbE1jBS40EtBRvvx", model: "tv6", extra: true, enable: true }
    # done
    consolidated profit and loss statement: { parser: "1hh51mG0tc3z4hYC", model: "tv6", extra: true, enable: true }
    # done
    standalone profit and loss statement:   { parser: "1hh51mG0tc3z4hYC", model: "tv6", extra: true, enable: true }
    # done
    consolidated cashflow:                  { parser: "9JcrGiEcJqtUvUB5", model: "tv6", extra: true, enable: false }
    # done
    standalone cashflow:                    { parser: "9JcrGiEcJqtUvUB5", model: "tv6", extra: true, enable: false }
    # done
  bank:
    consolidated balance sheet:             { parser: "JZRkn5y0kkSmABvy", model: "tv6", extra: true, enable: true }
    # done
    standalone balance sheet:               { parser: "JZRkn5y0kkSmABvy", model: "tv6", extra: true, enable: true } # JZRkn5y0kkSmABvy latest working id
    # done
    consolidated profit and loss statement: { parser: "5o14rnboPfr82BG9", model: "tv6", extra: true, enable: true }
    #consolidated profit and loss statement: { parser: "CPzQ1VdyXs6NjIil", model: "tv6", extra: true, enable: true } # for testing only
    # done
    standalone profit and loss statement:   { parser: "5o14rnboPfr82BG9", model: "tv6", extra: true, enable: true }
    #standalone profit and loss statement:   { parser: "CPzQ1VdyXs6NjIil", model: "tv6", extra: true, enable: true } # for testing only
    # done
    consolidated cashflow:                  { parser: "9JcrGiEcJqtUvUB5", model: "tv6", extra: true, enable: false }
    # done
    standalone cashflow:                    { parser: "9JcrGiEcJqtUvUB5", model: "tv6", extra: true, enable: false }
    # done
  nbfc: {}
  insurance: {}
  fallback_order:
    - "company_type_and_doc_type"    # exact match
    - "corporate_and_doc_type"       # generic fallback
    - "third_defaults"               # passes.third.defaults
  # Optional global parser toggles for testing
  # If 'allowed_parsers' is non-empty, only those parser IDs will be used.
  # Parsers listed under 'blocked_parsers' are never used.
  allowed_parsers: []
  blocked_parsers: []

units_and_scaling:
  unit_header_patterns:
    - "₹\\s*(in\\.?|in)\\s*(crore|cr|million|mn|lakh|thousand)"
  multipliers:
    crore: 10000000
    lakh: 100000
    million: 1000000
    thousand: 1000

grouping:
  absorb_others_between_same_type: true
  neighbor_radius: 1                 # smoothing window when building ranges
  inherit_scope_on_continuation: true
  # When true, grouping will NOT override second-pass classification using
  # header text heuristics; doc types will reflect the classifier exactly.
  disable_header_override: true

validation:
  enable: true
  rounding_tolerance_units:          # acceptable absolute diffs by unit
    crore: 0.01                      # ≈ 1 lakh when numbers are in crore
    million: 0.01
    lakh: 1
    thousand: 10
  checks:
    balance_sheet:
      enforce_equation: true         # Assets ≈ Equity + Liabilities
      pct_tolerance: 0.015           # 1.5% or rounding tolerance (whichever higher)
      # New: verify each section's Total equals sum of its items
      sum_subitems:
        enable: true
        tolerance_pct: 0.001         # allow 0.1% rounding noise
        abs_min: 1.0                 # or at least 1 unit (per your data unit)
      # Fine-grained toggles for which validations to run
      declared_components: true          # only totals/subtotals with explicit `components`
      children_without_components: false # turn OFF unless explicitly needed
      section_checks: false              # turn OFF: only declared requested
      section_equality: false            # turn OFF: only declared requested
      contiguous_block_fallback: false  # turn OFF: only declared requested
      composed_and_grand: false         # turn OFF: only declared requested
    profit_and_loss:
      enable: true
      tolerance_pct: 0.005
      abs_min: 1.0
      require_eps_block: true
      use_declared_components_first: true
      declared_only: false            # allow fallback when components are not declared
      max_components: 10              # cap for brute-force; keep small if allow_subset=true
      allow_subset: true              # explore +/-/drop combinations (3^N on <= max_components)
    cashflow:
      enable: true
      enforce_cash_tie: true         # CFO + CFI + CFF ≈ Δ cash; tie to opening/closing
      tolerance_pct: 0.005
      abs_min: 1.0
  # Company-type specific validation profiles (regex, case-insensitive)
  profiles:
    corporate:
      tolerance_pct: 0.001
      abs_min: 1
      exclude_from_sum_patterns:
        - '^total\\b'
        - '^subtotal\\b'
        - '^equity\\s+attributable'
      composed_totals:
        '^total\\s*equity\\b':
          - '^equity\\s+attributable.*(company|group)\\b'
          - '^non[-\\s]?controlling\\s+interests\\b'
      grand_total_map:
        '^total\\s*assets\\b':
          - '^total\\s*non[-\\s]?current\\s*assets\\b'
          - '^total\\s*current\\s*assets\\b'
        '^total\\s*equity\\s*and\\s*liabilit(?:y|ies)\\b':
          - '^total\\s*equity\\b'
          - '^total\\s*non[-\\s]?current\\s*liabilit(?:y|ies)\\b'
          - '^total\\s*current\\s*liabilit(?:y|ies)\\b'
      equality_checks:
        - ['^total\\s*assets\\b','^total\\s*equity\\s*and\\s*liabilit(?:y|ies)\\b']
    bank:
      tolerance_pct: 0.0005
      abs_min: 1
      exclude_from_sum_patterns:
        - '^total\\b'
        - '^subtotal\\b'
      grand_total_map:
        '^total\\s*equity\\s*and\\s*liabilit(?:y|ies)\\b':
          - '^capital\\b'
          - '^reserves?\\s*and\\s*surplus\\b'
          - '^deposits\\b'
          - '^borrowings\\b'
          - '^other\\s*liabilit(?:y|ies)\\s*and\\s*provisions\\b'
        '^total\\s*assets\\b':
          - '^cash\\s*(?:&|and)\\s*balances?\\s*with\\s*(?:reserve\\s*bank\\s*of\\s*india|rbi)\\b'
          - '^balances?\\s*with\\s*banks.*short\\s*notice\\b'
          - '^investments\\b'
          - '^advances\\b'
          - '^fixed\\s*assets\\b'
          - '^other\\s*assets\\b'
      equality_checks:
        - ['^total\\s*assets\\b','^total\\s*equity\\s*and\\s*liabilit(?:y|ies)\\b']

export:
  statements_workbook:
    sheet_order:
      - Consolidated Balance Sheet
      - Consolidated Profit and Loss Statement
      - Consolidated Cashflow
      - Standalone Balance Sheet
      - Standalone Profit and Loss Statement
      - Standalone Cashflow
    include_routing_summary: true
    include_validation_sheet: true       # add Validation sheet with sum checks
    validation_sheet_name: "Validation"
    include_common_size_sheets: true     # also emit "(Common Size)" sheets
    # Use a boolean or a per-sheet map. Enable labels for Cashflow too.
    use_period_labels:
      default: true
      Standalone Cashflow: true
    style:
      header_fill: "305496"          # hex (no #)
      header_font_color: "FFFFFF"
    freeze_panes: "A2"
  filenames:
    group_pdf:  "{stem}_{slug}.pdf"
    group_json: "{stem}_{slug}_ocr.json"
    # Explicit first-pass JSON filename (no slug available in first pass)
    first_pass_json: "{stem}_ocr.json"
    statements_xlsx: "{stem}_statements.xlsx"
  combined_json:
    filename: "{stem}_statements.json"
    include_first_pass: true
    include_second_pass: true
    include_third_pass_raw: false    # set true to embed raw parsedData for each group
    include_rows: true               # flattened rows for each group

analytics:
  enable: true
  units:
    default_unit: "crore"            # used if assume_when_missing=true
    assume_when_missing: true        # if true and unit not detected, use default_unit
  wacc: 0.12                        # default WACC (12%) for ROIC spread calculations
  kpi_patterns:                     # regex patterns to find KPIs in rows
    pl:                             # Profit & Loss
      revenue: ['^\s*revenue\s*from\s*operations\b','^\s*total\s*income\b']
      ebitda: ['\bebitda\b','earnings before interest, tax, depreciation and amortisation','\boperating\s*profit\b']
      ebit: ['profit\s*before\s*interest\s*and\s*tax','\boperating\s*profit\b','\bebit\b']
      net_profit: ['^\s*profit\s*for\s*(the\s*)?(year|period)\b','\bprofit\s*after\s*tax\b','\bpat\b','\bnet\s*profit\b']
      gross_profit: ['\bgross\s*profit\b']
      cogs: ['cost\s*of\s*(goods|materials)','costs?\s*of\s*revenue']
      interest_expense: ['\bfinance\s*costs\b','\binterest\s*expense\b']
      tax_expense: ['\btax\s*expense\b','\bcurrent\s*tax\b']
      pbt: ['\bprofit\s*before\s*tax\b','\bpbt\b']
    cf:                             # Cashflow
      ocf:
        - '(?:net\s*)?cash\s*(?:flows?\s*)?from\s*operating\s*activities'
        - '(?:net\s*)?cash\s*(?:flows?\s*)?generated\s*from\s*operating\s*activities'
        - 'cash\s*generated\s*from\s*operating\s*activities'
        - 'cash\s*generated\s*from\s*operations'
      capex: ['purchase\s*of\s*property,?\s*plant\s*and\s*equipment','capital\s*expenditure']
    bs:                             # Balance Sheet
      receivables: ['\btrade\s*receivables\b','\baccounts\s*receivable\b']
      payables: ['\btrade\s*payables\b','\baccounts\s*payable\b']
      inventory: ['\binventor(y|ies)\b','\bstock\b']
      total_assets: ['^\s*total\s*assets\b']
      equity: ['\btotal\s*equity\b','shareholders?\s*funds','\bnet\s*worth\b']
      total_debt: ['\bborrowings\b','\btotal\s*debt\b']
      cash: ['cash\s*and\s*cash\s*equivalents','\bcash\b']
  # Denominator patterns for common-size statements (case-insensitive regex)
  common_size:
    denominators:
      Profit And Loss Statement:
        - '^\s*revenue\s*from\s*operations\b'
        - '^\s*total\s*income\b'
        - '^\s*income\s*from\s*operations\b'
      Balance Sheet:
        - '^\s*total\s*assets\b'
        - '^\s*total\s*equity\s*and\s*liabilit(?:y|ies)\b'
      Cashflow:
        - '^\s*revenue\b'
    include_rows: true                  # include per-row % values in analytics.common_size

logging:
  # Quick presets: quiet | normal | verbose (acts as defaults; explicit keys win)
  preset: "normal"
  level: "DEBUG"
  json: false
  include_timing: true
  # Write logs to a rotating file as well as console. Path is relative to repo root.
  file: "logs/iwealth.log"
  rotate_max_bytes: 5000000   # 5 MB per file
  rotate_backups: 50           # keep last 5 files
  # Console handler controls
  console: true
  # console_level: "INFO"      # optional override, defaults to level
  # File-specific level override (defaults to level)
  # file_level: "INFO"
  # Include more context in each log line
  include_logger_name: true
  include_module: true
  include_path: true          # if true, uses full path instead of module
  include_lineno: true
  include_process: true
  include_thread: true
  # Timestamp options
  utc: false                   # set true to use UTC timestamps
  datefmt: "%H:%M:%S"        # used for text logs
  # Capture Python warnings and prints
  capture_warnings: true
  capture_prints: true        # set true to mirror stdout/stderr to logs
  print_level_out: "INFO"     # level for stdout when captured
  print_level_err: "ERROR"    # level for stderr when captured
  # Advanced: if integrating with frameworks that pre-configure logging, avoid forcing reconfigure
  force_reconfigure: false
  # Enable library (third-party) logger level controls
  libs_enable: true
  # Fine-grained logger controls (tune noise up/down by area)
  # Example levels here suppress noisy HTTP libs while keeping app DEBUG.
  loggers:
    iwe_core: INFO
    iwe_core.pipeline: INFO
    iwe_core.excel_ops: INFO
    iwe_core.ocr_client: INFO
    stdout: INFO
    stderr: ERROR
  libs:
    urllib3: WARNING
    requests: WARNING

# Toggle extra debug output without changing environment variables.
# Env vars still override these at runtime:
#   IWEALTH_DEBUG_JSON, IWEALTH_DEBUG_VALIDATION
debug:
  json_extraction: true      # enables [JSONDBG] logs
  validation: true           # enables [VALDBG] logs
  periods_dump: true         # writes periods_debug.json artifact next to workbook

paths:
  mapping_yaml: "mapping.yaml"       # reuse your existing file
  config_local: "config.local.yaml"  # optional overrides (git-ignored)

truthy_values: ["true","1","yes","y","on"]


schema:
  first_pass:
    has_table: ["parsedData.has_table"]
    document_type: ["parsedData.Document_type"]
    has_multiple_sections: ["parsedData.Has_multiple_sections"]

  second_pass:
    organisation_type: ["organisation_type.type"]            # was parsedData.organisation_type.type
    classification_container: ["page_wise_classification", "classification"]   # was parsedData.*
    fields:
      page_number: ["page_number", "pageNo", "index"]
      doc_type: ["doc_type", "Document_type"]
      is_continuation: ["is_continuation", "isContinuation"]
      continuation_of: ["continuation_of", "continuationOf"]
      has_two: ["has_two", "Has_multiple_sections"]
      second_doc_type: ["second_doc_type", "Second_doc_type", "secondType"]
